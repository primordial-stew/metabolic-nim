/* Generated by the Nim Compiler v0.17.2 */
/*   (c) 2017 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI3438 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3442 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33002 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI13609 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3506 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3501 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3424 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3458 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI3458 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3458.node = NNI3458;
NTI3501.base = NTI3424;
NTI3506.base = NTI3424;
var NNI3424 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3501, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI3506, name: "up", sons: null}]};
NTI3424.node = NNI3424;
var NNI3408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3408.node = NNI3408;
NTI3424.base = NTI3408;
NTI3458.base = NTI3424;
var NNI13609 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI13609.node = NNI13609;
var NNI33002 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI33002, name: "", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI33002, name: "prefix", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI33002, name: "infix", len: 0, sons: null}}};
NTI33002.node = NNI33002;
var NNI3442 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3442.node = NNI3442;
var NNI3438 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3438.node = NNI3438;
NTI3438.base = NTI3424;
NTI3442.base = NTI3438;

function setConstr() {
		      var result = {};
      for (var i = 0; i < arguments.length; ++i) {
        var x = arguments[i];
        if (typeof(x) == "object") {
          for (var j = x[0]; j <= x[1]; ++j) {
            result[j] = true;
          }
        } else {
          result[x] = true;
        }
      }
      return result;
    

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_19817, src_19818, ti_19819) {
	var result_20229 = null;

		switch (ti_19819.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(isFatPointer_19801(ti_19819))) {
			result_20229 = src_19818;
			}
			else {
				result_20229 = [src_19818[0], src_19818[1]];
			}
			
			break;
		case 19:
			      if (dest_19817 === null || dest_19817 === undefined) {
        dest_19817 = {};
      }
      else {
        for (var key in dest_19817) { delete dest_19817[key]; }
      }
      for (var key in src_19818) { dest_19817[key] = src_19818[key]; }
      result_20229 = dest_19817;
    
			break;
		case 18:
		case 17:
			if (!((ti_19819.base == null))) {
			result_20229 = nimCopy(dest_19817, src_19818, ti_19819.base);
			}
			else {
			if ((ti_19819.kind == 17)) {
			result_20229 = (dest_19817 === null || dest_19817 === undefined) ? {m_type: ti_19819} : dest_19817;
			}
			else {
				result_20229 = (dest_19817 === null || dest_19817 === undefined) ? {} : dest_19817;
			}
			}
			nimCopyAux(result_20229, src_19818, ti_19819.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_19818 === null) {
        result_20229 = null;
      }
      else {
        if (dest_19817 === null || dest_19817 === undefined) {
          dest_19817 = new Array(src_19818.length);
        }
        else {
          dest_19817.length = src_19818.length;
        }
        result_20229 = dest_19817;
        for (var i = 0; i < src_19818.length; ++i) {
          result_20229[i] = nimCopy(result_20229[i], src_19818[i], ti_19819.base);
        }
      }
    
			break;
		case 28:
			      if (src_19818 !== null) {
        result_20229 = src_19818.slice(0);
      }
    
			break;
		default: 
			result_20229 = src_19818;
			break;
		}

	return result_20229;

}

function cstrToNimstr(c_14803) {
		  var ln = c_14803.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_14803.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_14803.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  result[r] = 0; // terminating zero
  return result;
  

	
}

function toJSStr(s_15003) {
		    var len = s_15003.length-1;
    var asciiPart = new Array(len);
    var fcc = String.fromCharCode;
    var nonAsciiPart = null;
    var nonAsciiOffset = 0;
    for (var i = 0; i < len; ++i) {
      if (nonAsciiPart !== null) {
        var offset = (i - nonAsciiOffset) * 2;
        var code = s_15003[i].toString(16);
        if (code.length == 1) {
          code = "0"+code;
        }
        nonAsciiPart[offset] = "%";
        nonAsciiPart[offset + 1] = code;
      }
      else if (s_15003[i] < 128)
        asciiPart[i] = fcc(s_15003[i]);
      else {
        asciiPart.length = i;
        nonAsciiOffset = i;
        nonAsciiPart = new Array((len - i) * 2);
        --i;
      }
    }
    asciiPart = asciiPart.join("");
    return (nonAsciiPart === null) ?
        asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function makeNimstrLit(c_14603) {
		    var ln = c_14603.length;
    var result = new Array(ln + 1);
    var i = 0;
    for (; i < ln; ++i) {
      result[i] = c_14603.charCodeAt(i);
    }
    result[i] = 0; // terminating zero
    return result;
    

	
}

function eqStrings(a_17203, b_17204) {
		    if (a_17203 == b_17204) return true;
    if ((!a_17203) || (!b_17204)) return false;
    var alen = a_17203.length;
    if (alen != b_17204.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_17203[i] != b_17204[i]) return false;
    return true;
  

	
}

function arrayConstr(len_20264, value_20265, typ_20266) {
		      var result = new Array(len_20264);
      for (var i = 0; i < len_20264; ++i) result[i] = nimCopy(null, value_20265, typ_20266);
      return result;
    

	
}

function raiseException(e_14006, ename_14007) {
		e_14006.name = ename_14007;
		if ((excHandler == 0)) {
		unhandledException(e_14006);
		}
		
		e_14006.trace = nimCopy(null, rawWriteStackTrace_13828(), NTI138);
		throw e_14006;

	
}

function chckRange(i_20409, a_20410, b_20411) {
			var Tmp1;

	var result_20412 = 0;

	BeforeRet: do {
			if (!(a_20410 <= i_20409)) Tmp1 = false; else {				Tmp1 = (i_20409 <= b_20411);			}		if (Tmp1) {
		result_20412 = i_20409;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_20412;

}

function reprEnum(e_20828, typ_20829) {
	var result_20830 = null;

	var F={procname:"system.reprEnum",prev:framePtr,filename:"lib/system/reprjs.nim",line:0};
	framePtr = F;
		if (!(isUndefined_20832(typ_20829.node.sons[e_20828]))) {
		F.line = 38;
		result_20830 = nimCopy(null, cstrToNimstr(typ_20829.node.sons[e_20828].name), NTI138);
		}
		else {
			F.line = 40;
			result_20830 = nimCopy(null, (cstrToNimstr((e_20828)+"").slice(0,-1)).concat(makeNimstrLit(" (invalid data!)")), NTI138);
		}
		
	framePtr = F.prev;

	return result_20830;

}

function subInt(a_17603, b_17604) {
		      var result = a_17603 - b_17604;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    

	
}
var nimvm_6119 = false;
var nim_program_result = 0;
var globalRaiseHook_11605 = [null];
var localRaiseHook_11610 = [null];
var outOfMemHook_11613 = [null];

function el_33026(tag_33028, parent_33029, next_33030) {
	var result_33031 = null;

	var F={procname:"model.el",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 15;
		result_33031 = document.createElement(tag_33028);
		F.line = 16;
		parent_33029.insertBefore(result_33031, next_33030);
	framePtr = F.prev;

	return result_33031;

}

function symbol_33032() {
	var result_33034 = null;

	var F={procname:"model.symbol",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 19;
		result_33034 = {el: el_33026("code", el_33026("p", document.body, null), null)};
	framePtr = F.prev;

	return result_33034;

}

function isFatPointer_19801(ti_19803) {
	var result_19804 = false;

	BeforeRet: do {
		result_19804 = !((ConstSet1[ti_19803.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_19804;

}

function nimCopyAux(dest_19822, src_19823, n_19825) {
		switch (n_19825.kind) {
		case 0:
			break;
		case 1:
			      dest_19822[n_19825.offset] = nimCopy(dest_19822[n_19825.offset], src_19823[n_19825.offset], n_19825.typ);
    
			break;
		case 2:
			L1: do {
				var i_20215 = 0;
				var colontmp__20217 = 0;
				colontmp__20217 = (n_19825.len - 1);
				var res_20220 = 0;
				L2: do {
						L3: while (true) {
						if (!(res_20220 <= colontmp__20217)) break L3;
							i_20215 = res_20220;
							nimCopyAux(dest_19822, src_19823, n_19825.sons[i_20215]);
							res_20220 += 1;
						}
				} while(false);
			} while(false);
			break;
		case 3:
			      dest_19822[n_19825.offset] = nimCopy(dest_19822[n_19825.offset], src_19823[n_19825.offset], n_19825.typ);
      for (var i = 0; i < n_19825.sons.length; ++i) {
        nimCopyAux(dest_19822, src_19823, n_19825.sons[i][1]);
      }
    
			break;
		}

	
}

function state_34017(class_34019, text_34020, pos_34021, prev_34022, next_34023) {
	var result_34024 = null;

	var F={procname:"model_spec.state",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model_spec.nim",line:0};
	framePtr = F;
		F.line = 13;
		result_34024 = {class: class_34019, text: nimCopy(null, text_34020, NTI138), pos: pos_34021, prev: prev_34022, next: next_34023};
	framePtr = F.prev;

	return result_34024;

}

function class_33036(self_33038) {
		var Tmp1;

	var result_33039 = 0;

	var F={procname:"model.class",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 22;
		F.line = 22;
		switch (toJSStr(cstrToNimstr(self_33038.el.className))) {
		case "prefix":
			Tmp1 = 1;
			break;
		case "infix":
			Tmp1 = 2;
			break;
		default: 
			Tmp1 = 0;
			break;
		}
		result_33039 = Tmp1;
	framePtr = F.prev;

	return result_33039;

}

function text_33050(self_33052) {
	var result_33053 = null;

	var F={procname:"model.text",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 34;
		result_33053 = nimCopy(null, cstrToNimstr(self_33052.el.textContent), NTI138);
	framePtr = F.prev;

	return result_33053;

}

function add_11629(x_11632, x_11632_Idx, y_11633) {
		        var len = x_11632[0].length-1;
        for (var i = 0; i < y_11633.length; ++i) {
          x_11632[0][len] = y_11633.charCodeAt(i);
          ++len;
        }
        x_11632[0][len] = 0
      

	
}

function auxWriteStackTrace_13604(f_13606) {
					var Tmp3;

	var result_13607 = [null];

		var it_13615 = f_13606;
		var i_13616 = 0;
		var total_13617 = 0;
		var tempFrames_13621 = arrayConstr(64, {Field0: null, Field1: 0}, NTI13609);
		L1: do {
				L2: while (true) {
					if (!!((it_13615 == null))) Tmp3 = false; else {						Tmp3 = (i_13616 <= 63);					}				if (!Tmp3) break L2;
					tempFrames_13621[i_13616].Field0 = it_13615.procname;
					tempFrames_13621[i_13616].Field1 = it_13615.line;
					i_13616 += 1;
					total_13617 += 1;
					it_13615 = it_13615.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_13615 == null))) break L5;
					total_13617 += 1;
					it_13615 = it_13615.prev;
				}
		} while(false);
		result_13607[0] = nimCopy(null, makeNimstrLit(""), NTI138);
		if (!((total_13617 == i_13616))) {
		if (result_13607[0] != null) { result_13607[0] = (result_13607[0].slice(0, -1)).concat(makeNimstrLit("(")); } else { result_13607[0] = makeNimstrLit("(");};
		if (result_13607[0] != null) { result_13607[0] = (result_13607[0].slice(0, -1)).concat(cstrToNimstr(((total_13617 - i_13616))+"")); } else { result_13607[0] = cstrToNimstr(((total_13617 - i_13616))+"");};
		if (result_13607[0] != null) { result_13607[0] = (result_13607[0].slice(0, -1)).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_13607[0] = makeNimstrLit(" calls omitted) ...\x0A");};
		}
		
		L6: do {
			var j_13815 = 0;
			var colontmp__13821 = 0;
			colontmp__13821 = (i_13616 - 1);
			var res_13824 = colontmp__13821;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_13824)) break L8;
						j_13815 = res_13824;
						add_11629(result_13607, 0, tempFrames_13621[j_13815].Field0);
						if ((0 < tempFrames_13621[j_13815].Field1)) {
						if (result_13607[0] != null) { result_13607[0] = (result_13607[0].slice(0, -1)).concat(makeNimstrLit(", line: ")); } else { result_13607[0] = makeNimstrLit(", line: ");};
						if (result_13607[0] != null) { result_13607[0] = (result_13607[0].slice(0, -1)).concat(cstrToNimstr((tempFrames_13621[j_13815].Field1)+"")); } else { result_13607[0] = cstrToNimstr((tempFrames_13621[j_13815].Field1)+"");};
						}
						
						if (result_13607[0] != null) { result_13607[0] = (result_13607[0].slice(0, -1)).concat(makeNimstrLit("\x0A")); } else { result_13607[0] = makeNimstrLit("\x0A");};
						res_13824 -= 1;
					}
			} while(false);
		} while(false);

	return result_13607[0];

}

function rawWriteStackTrace_13828() {
	var result_13830 = null;

		if (!((framePtr == null))) {
		result_13830 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A").slice(0,-1)).concat(auxWriteStackTrace_13604(framePtr)), NTI138);
		}
		else {
			result_13830 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
		}
		

	return result_13830;

}

function unhandledException(e_13853) {
			var Tmp1;

		var buf_13854 = [makeNimstrLit("")];
			if (!!(eqStrings(e_13853.message, null))) Tmp1 = false; else {				Tmp1 = !((e_13853.message[0] == 0));			}		if (Tmp1) {
		if (buf_13854[0] != null) { buf_13854[0] = (buf_13854[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_13854[0] = makeNimstrLit("Error: unhandled exception: ");};
		if (buf_13854[0] != null) { buf_13854[0] = (buf_13854[0].slice(0, -1)).concat(e_13853.message); } else { buf_13854[0] = e_13853.message;};
		}
		else {
		if (buf_13854[0] != null) { buf_13854[0] = (buf_13854[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_13854[0] = makeNimstrLit("Error: unhandled exception");};
		}
		
		if (buf_13854[0] != null) { buf_13854[0] = (buf_13854[0].slice(0, -1)).concat(makeNimstrLit(" [")); } else { buf_13854[0] = makeNimstrLit(" [");};
		add_11629(buf_13854, 0, e_13853.name);
		if (buf_13854[0] != null) { buf_13854[0] = (buf_13854[0].slice(0, -1)).concat(makeNimstrLit("]\x0A")); } else { buf_13854[0] = makeNimstrLit("]\x0A");};
		if (buf_13854[0] != null) { buf_13854[0] = (buf_13854[0].slice(0, -1)).concat(rawWriteStackTrace_13828()); } else { buf_13854[0] = rawWriteStackTrace_13828();};
		var cbuf_14001 = toJSStr(buf_13854[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_14001);
  }
  else {
    throw cbuf_14001;
  }
  

	
}

function raiseRangeError() {
		var e_14476 = null;
		e_14476 = {m_type: NTI3458, parent: null, name: null, message: null, trace: null, up: null};
		e_14476.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
		e_14476.parent = null;
		raiseException(e_14476, "RangeError");

	
}

function pos_33058(self_33060) {
		var Tmp1;

	var result_33061 = 0;

	var F={procname:"model.pos",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 41;
		F.line = 41;
		var sel_33062 = document.getSelection();
		if ((0 < sel_33062.rangeCount)) {
		Tmp1 = chckRange(sel_33062.getRangeAt(0).startOffset, -2147483648, 2147483647);
		}
		else {
		Tmp1 = -2147483648;
		}
		
		result_33061 = Tmp1;
	framePtr = F.prev;

	return result_33061;

}

function prev_33089(self_33091) {
		var Tmp1;

	var result_33092 = null;

	var F={procname:"model.prev",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 55;
		F.line = 55;
		var node_33093 = self_33091.el.previousSibling;
		if (!((node_33093 == null))) {
		Tmp1 = {el: node_33093};
		}
		else {
		Tmp1 = null;
		}
		
		result_33092 = Tmp1;
	framePtr = F.prev;

	return result_33092;

}

function next_33106(self_33108) {
		var Tmp1;

	var result_33109 = null;

	var F={procname:"model.next",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 62;
		F.line = 62;
		var node_33110 = self_33108.el.nextSibling;
		if (!((node_33110 == null))) {
		Tmp1 = {el: node_33110};
		}
		else {
		Tmp1 = null;
		}
		
		result_33109 = Tmp1;
	framePtr = F.prev;

	return result_33109;

}

function isUndefined_20832(x_20836) {
	var result_20837 = false;

	var F={procname:"isUndefined.isUndefined",prev:framePtr,filename:"lib/system/reprjs.nim",line:0};
	framePtr = F;
		F.line = 34;
		result_20837 = x_20836 === undefined;
	framePtr = F.prev;

	return result_20837;

}

function classeq__33040(self_33042, val_33043) {
	var F={procname:"model.class=",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 31;
		self_33042.el.className = toJSStr(reprEnum(val_33043, NTI33002));
	framePtr = F.prev;

	
}

function texteq__33054(self_33056, val_33057) {
	var F={procname:"model.text=",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 37;
		self_33056.el.textContent = toJSStr(val_33057);
	framePtr = F.prev;

	
}

function poseq__33082(self_33084, val_33085) {
	var F={procname:"model.pos=",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 48;
		var sel_33086 = document.getSelection();
		F.line = 49;
		var range_33087 = document.createRange();
		F.line = 50;
		range_33087.setStart(self_33084.el.firstChild, val_33085);
		F.line = 51;
		sel_33086.removeAllRanges();
		F.line = 52;
		sel_33086.addRange(range_33087);
	framePtr = F.prev;

	
}

function del_33123(self_33125) {
	var F={procname:"model.del",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 69;
		self_33125.el.parentNode.removeChild(self_33125.el);
	framePtr = F.prev;

	
}

function colonanonymous__34278() {

function colonanonymous__34040() {
	var F={procname:"model_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model_spec.nim",line:0};
	framePtr = F;
		F.line = 17;
		var this_ = symbol_33032();
		F.line = 19;
		weknowhow.expect(state_34017(class_33036(this_), text_33050(this_), pos_33058(this_), prev_33089(this_), next_33106(this_)), "to equal", state_34017(0, makeNimstrLit(""), -2147483648, null, null));
	framePtr = F.prev;

	
}

function colonanonymous__34064() {
	var F={procname:"model_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model_spec.nim",line:0};
	framePtr = F;
		F.line = 17;
		var this_ = symbol_33032();
		F.line = 27;
		classeq__33040(this_, 0);
		F.line = 19;
		weknowhow.expect(state_34017(class_33036(this_), text_33050(this_), pos_33058(this_), prev_33089(this_), next_33106(this_)), "to equal", state_34017(0, makeNimstrLit(""), -2147483648, null, null));
	framePtr = F.prev;

	
}

function colonanonymous__34088() {
	var F={procname:"model_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model_spec.nim",line:0};
	framePtr = F;
		F.line = 17;
		var this_ = symbol_33032();
		F.line = 30;
		classeq__33040(this_, 1);
		F.line = 31;
		texteq__33054(this_, makeNimstrLit("foo"));
		F.line = 19;
		weknowhow.expect(state_34017(class_33036(this_), text_33050(this_), pos_33058(this_), prev_33089(this_), next_33106(this_)), "to equal", state_34017(1, makeNimstrLit("foo"), -2147483648, null, null));
	framePtr = F.prev;

	
}

function colonanonymous__34112() {
	var F={procname:"model_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model_spec.nim",line:0};
	framePtr = F;
		F.line = 17;
		var this_ = symbol_33032();
		F.line = 34;
		classeq__33040(this_, 2);
		F.line = 35;
		texteq__33054(this_, makeNimstrLit("->"));
		F.line = 19;
		weknowhow.expect(state_34017(class_33036(this_), text_33050(this_), pos_33058(this_), prev_33089(this_), next_33106(this_)), "to equal", state_34017(2, makeNimstrLit("->"), -2147483648, null, null));
	framePtr = F.prev;

	
}

function colonanonymous__34127() {
	var F={procname:"model_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model_spec.nim",line:0};
	framePtr = F;
		F.line = 17;
		var this_ = symbol_33032();
		F.line = 38;
		texteq__33054(this_, makeNimstrLit("buzz"));
		F.line = 39;
		poseq__33082(this_, 2);
		F.line = 19;
		weknowhow.expect(state_34017(class_33036(this_), text_33050(this_), pos_33058(this_), prev_33089(this_), next_33106(this_)), "to equal", state_34017(0, makeNimstrLit("buzz"), 2, null, null));
	framePtr = F.prev;

	
}

function colonanonymous__34140() {
	var F={procname:"model_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model_spec.nim",line:0};
	framePtr = F;
		F.line = 17;
		var this_ = symbol_33032();
		F.line = 43;
		texteq__33054(this_, makeNimstrLit("foo"));
		F.line = 44;
		del_33123(this_);
		F.line = 19;
		weknowhow.expect(state_34017(class_33036(this_), text_33050(this_), pos_33058(this_), prev_33089(this_), next_33106(this_)), "to equal", state_34017(0, makeNimstrLit("foo"), 2, null, null));
	framePtr = F.prev;

	
}

	var F={procname:"model_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/test.nim",line:0};
	framePtr = F;
		F.line = 23;
		specify("default", colonanonymous__34040);
		F.line = 26;
		specify("clear class", colonanonymous__34064);
		F.line = 29;
		specify("set prefix", colonanonymous__34088);
		F.line = 33;
		specify("set infix", colonanonymous__34112);
		F.line = 37;
		specify("set position", colonanonymous__34127);
		F.line = 42;
		specify("remove", colonanonymous__34140);
	framePtr = F.prev;

	
}
describe("model", colonanonymous__34278);

function formula_33156() {
	var result_33158 = null;

	var F={procname:"model.formula",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 97;
		result_33158 = {curr: symbol_33032()};
	framePtr = F.prev;

	return result_33158;

}

function add_33126(self_33128, next_33129, class_33130, text_33131) {
		var Tmp1;

	var F={procname:"model.add",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 76;
		if (!((next_33129 == null))) {
		Tmp1 = next_33129.el;
		}
		else {
		Tmp1 = null;
		}
		
		var prev_33143 = {el: el_33026("code", self_33128.el.parentNode, Tmp1)};
		F.line = 83;
		classeq__33040(prev_33143, class_33130);
		F.line = 84;
		texteq__33054(prev_33143, text_33131);
	framePtr = F.prev;

	
}

function prepend_33146(self_33148, class_33149, text_33150) {
	var F={procname:"model.prepend",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 89;
		add_33126(self_33148, self_33148, class_33149, text_33150);
	framePtr = F.prev;

	
}

function X5BX5D__21642(s_21644, x_21654) {
	var result_21655 = null;

	var F={procname:"system.[]",prev:framePtr,filename:"lib/system.nim",line:0};
	framePtr = F;
		F.line = 3404;
		result_21655 = nimCopy(null, (s_21644.slice(x_21654.a, (x_21654.b)+1).concat(0)), NTI138);
	framePtr = F.prev;

	return result_21655;

}

function dotdot__35009(a_35013, b_35015) {
	var result_35017 = {a: 0, b: 0};

	var F={procname:".....",prev:framePtr,filename:"lib/system.nim",line:0};
	framePtr = F;
		F.line = 305;
		result_35017.a = a_35013;
		F.line = 306;
		result_35017.b = b_35015;
	framePtr = F.prev;

	return result_35017;

}

function raiseOverflow() {
		var e_14440 = null;
		e_14440 = {m_type: NTI3442, parent: null, name: null, message: null, trace: null, up: null};
		e_14440.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		e_14440.parent = null;
		raiseException(e_14440, "OverflowError");

	
}

function split_35003(self_35005) {
	var F={procname:"action.split",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action.nim",line:0};
	framePtr = F;
		F.line = 4;
		var text_35006 = text_33050(self_35005.curr);
		F.line = 5;
		var pos_35007 = pos_33058(self_35005.curr);
		F.line = 6;
		prepend_33146(self_35005.curr, class_33036(self_35005.curr), X5BX5D__21642(text_35006, dotdot__35009(0, subInt(pos_35007, 1))));
		F.line = 7;
		texteq__33054(self_35005.curr, X5BX5D__21642(text_35006, dotdot__35009(pos_35007, subInt((text_35006 != null ? text_35006.length-1 : 0), 1))));
		if (((text_33050(self_35005.curr) != null ? text_33050(self_35005.curr).length-1 : 0) == 0)) {
		F.line = 9;
		classeq__33040(self_35005.curr, 0);
		}
		
	framePtr = F.prev;

	
}

function state_36007() {
	var result_36009 = null;

	var F={procname:"action_spec.state",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action_spec.nim",line:0};
	framePtr = F;
		F.line = 8;
		result_36009 = {};
	framePtr = F.prev;

	return result_36009;

}

function append_33151(self_33153, class_33154, text_33155) {
	var F={procname:"model.append",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 94;
		add_33126(self_33153, next_33106(self_33153), class_33154, text_33155);
	framePtr = F.prev;

	
}

function wedge_35027(self_35029) {
	var F={procname:"action.wedge",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action.nim",line:0};
	framePtr = F;
		F.line = 12;
		var class_35030 = class_33036(self_35029.curr);
		F.line = 13;
		var text_35031 = text_33050(self_35029.curr);
		F.line = 14;
		var pos_35032 = pos_33058(self_35029.curr);
		if ((0 < pos_35032)) {
		F.line = 16;
		prepend_33146(self_35029.curr, class_35030, X5BX5D__21642(text_35031, dotdot__35009(0, subInt(pos_35032, 1))));
		}
		
		if ((pos_35032 < (text_35031 != null ? text_35031.length-1 : 0))) {
		F.line = 18;
		append_33151(self_35029.curr, class_35030, X5BX5D__21642(text_35031, dotdot__35009(pos_35032, subInt((text_35031 != null ? text_35031.length-1 : 0), 1))));
		}
		
		F.line = 19;
		classeq__33040(self_35029.curr, 0);
		F.line = 20;
		texteq__33054(self_35029.curr, makeNimstrLit(""));
	framePtr = F.prev;

	
}

function join_35051(curr_35053, old_35054, left_35055, right_35056) {
	var F={procname:"action.join",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action.nim",line:0};
	framePtr = F;
		F.line = 24;
		var left_text_35057 = text_33050(left_35055);
		F.line = 25;
		classeq__33040(curr_35053, class_33036(old_35054));
		F.line = 26;
		texteq__33054(curr_35053, (left_text_35057.slice(0,-1)).concat(text_33050(right_35056)));
		F.line = 27;
		poseq__33082(curr_35053, (left_text_35057 != null ? left_text_35057.length-1 : 0));
		F.line = 28;
		del_33123(old_35054);
	framePtr = F.prev;

	
}

function join_left_35059(self_35061) {
	var F={procname:"action.join_left",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action.nim",line:0};
	framePtr = F;
		F.line = 31;
		var prev_35062 = prev_33089(self_35061.curr);
		if (!((prev_35062 == null))) {
		F.line = 33;
		join_35051(self_35061.curr, prev_35062, prev_35062, self_35061.curr);
		}
		
	framePtr = F.prev;

	
}

function join_right_35074(self_35076) {
	var F={procname:"action.join_right",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action.nim",line:0};
	framePtr = F;
		F.line = 36;
		var next_35077 = next_33106(self_35076.curr);
		if (!((next_35077 == null))) {
		F.line = 38;
		join_35051(self_35076.curr, next_35077, self_35076.curr, next_35077);
		}
		
	framePtr = F.prev;

	
}

function colonanonymous__36859() {

function colonanonymous__36071() {

function colonanonymous__36016() {
	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action_spec.nim",line:0};
	framePtr = F;
		F.line = 12;
		var this_ = formula_33156();
		F.line = 21;
		classeq__33040(this_.curr, 1);
		F.line = 22;
		texteq__33054(this_.curr, makeNimstrLit("foo"));
		F.line = 23;
		poseq__33082(this_.curr, 3);
		F.line = 24;
		split_35003(this_);
		F.line = 14;
		weknowhow.expect(state_36007(), "to equal", state_36007());
	framePtr = F.prev;

	
}

function colonanonymous__36029() {
	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action_spec.nim",line:0};
	framePtr = F;
		F.line = 12;
		var this_ = formula_33156();
		F.line = 27;
		classeq__33040(this_.curr, 1);
		F.line = 28;
		texteq__33054(this_.curr, makeNimstrLit("foobuzz"));
		F.line = 29;
		poseq__33082(this_.curr, 3);
		F.line = 30;
		split_35003(this_);
		F.line = 14;
		weknowhow.expect(state_36007(), "to equal", state_36007());
	framePtr = F.prev;

	
}

	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/test.nim",line:0};
	framePtr = F;
		F.line = 20;
		specify("after text", colonanonymous__36016);
		F.line = 26;
		specify("in between", colonanonymous__36029);
	framePtr = F.prev;

	
}

function colonanonymous__36154() {

function colonanonymous__36073() {
	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action_spec.nim",line:0};
	framePtr = F;
		F.line = 12;
		var this_ = formula_33156();
		F.line = 35;
		prepend_33146(this_.curr, 1, makeNimstrLit("foo"));
		F.line = 36;
		classeq__33040(this_.curr, 1);
		F.line = 37;
		texteq__33054(this_.curr, makeNimstrLit("buzz"));
		F.line = 38;
		poseq__33082(this_.curr, 0);
		F.line = 39;
		wedge_35027(this_);
		F.line = 14;
		weknowhow.expect(state_36007(), "to equal", state_36007());
	framePtr = F.prev;

	
}

function colonanonymous__36086() {
	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action_spec.nim",line:0};
	framePtr = F;
		F.line = 12;
		var this_ = formula_33156();
		F.line = 42;
		classeq__33040(this_.curr, 1);
		F.line = 43;
		texteq__33054(this_.curr, makeNimstrLit("foo"));
		F.line = 44;
		poseq__33082(this_.curr, 3);
		F.line = 45;
		wedge_35027(this_);
		F.line = 14;
		weknowhow.expect(state_36007(), "to equal", state_36007());
	framePtr = F.prev;

	
}

function colonanonymous__36099() {
	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action_spec.nim",line:0};
	framePtr = F;
		F.line = 12;
		var this_ = formula_33156();
		F.line = 48;
		classeq__33040(this_.curr, 1);
		F.line = 49;
		texteq__33054(this_.curr, makeNimstrLit("foobuzz"));
		F.line = 50;
		poseq__33082(this_.curr, 3);
		F.line = 51;
		wedge_35027(this_);
		F.line = 14;
		weknowhow.expect(state_36007(), "to equal", state_36007());
	framePtr = F.prev;

	
}

	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/test.nim",line:0};
	framePtr = F;
		F.line = 34;
		specify("before text", colonanonymous__36073);
		F.line = 41;
		specify("after text", colonanonymous__36086);
		F.line = 47;
		specify("in between", colonanonymous__36099);
	framePtr = F.prev;

	
}

function colonanonymous__36237() {

function colonanonymous__36156() {
	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action_spec.nim",line:0};
	framePtr = F;
		F.line = 12;
		var this_ = formula_33156();
		F.line = 56;
		classeq__33040(this_.curr, 1);
		F.line = 57;
		texteq__33054(this_.curr, makeNimstrLit("foo"));
		F.line = 58;
		join_left_35059(this_);
		F.line = 14;
		weknowhow.expect(state_36007(), "to equal", state_36007());
	framePtr = F.prev;

	
}

function colonanonymous__36169() {
	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action_spec.nim",line:0};
	framePtr = F;
		F.line = 12;
		var this_ = formula_33156();
		F.line = 61;
		prepend_33146(this_.curr, 1, makeNimstrLit("foo"));
		F.line = 62;
		join_left_35059(this_);
		F.line = 14;
		weknowhow.expect(state_36007(), "to equal", state_36007());
	framePtr = F.prev;

	
}

function colonanonymous__36182() {
	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action_spec.nim",line:0};
	framePtr = F;
		F.line = 12;
		var this_ = formula_33156();
		F.line = 65;
		prepend_33146(this_.curr, 1, makeNimstrLit("foo"));
		F.line = 66;
		classeq__33040(this_.curr, 1);
		F.line = 67;
		texteq__33054(this_.curr, makeNimstrLit("buzz"));
		F.line = 68;
		join_left_35059(this_);
		F.line = 14;
		weknowhow.expect(state_36007(), "to equal", state_36007());
	framePtr = F.prev;

	
}

	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/test.nim",line:0};
	framePtr = F;
		F.line = 55;
		specify("at top", colonanonymous__36156);
		F.line = 60;
		specify("before empty", colonanonymous__36169);
		F.line = 64;
		specify("in between", colonanonymous__36182);
	framePtr = F.prev;

	
}

function colonanonymous__36320() {

function colonanonymous__36239() {
	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action_spec.nim",line:0};
	framePtr = F;
		F.line = 12;
		var this_ = formula_33156();
		F.line = 73;
		classeq__33040(this_.curr, 1);
		F.line = 74;
		texteq__33054(this_.curr, makeNimstrLit("foo"));
		F.line = 75;
		join_right_35074(this_);
		F.line = 14;
		weknowhow.expect(state_36007(), "to equal", state_36007());
	framePtr = F.prev;

	
}

function colonanonymous__36252() {
	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action_spec.nim",line:0};
	framePtr = F;
		F.line = 12;
		var this_ = formula_33156();
		F.line = 78;
		append_33151(this_.curr, 1, makeNimstrLit("foo"));
		F.line = 79;
		join_right_35074(this_);
		F.line = 14;
		weknowhow.expect(state_36007(), "to equal", state_36007());
	framePtr = F.prev;

	
}

function colonanonymous__36265() {
	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action_spec.nim",line:0};
	framePtr = F;
		F.line = 12;
		var this_ = formula_33156();
		F.line = 82;
		classeq__33040(this_.curr, 1);
		F.line = 83;
		texteq__33054(this_.curr, makeNimstrLit("foo"));
		F.line = 84;
		append_33151(this_.curr, 1, makeNimstrLit("buzz"));
		F.line = 85;
		join_right_35074(this_);
		F.line = 14;
		weknowhow.expect(state_36007(), "to equal", state_36007());
	framePtr = F.prev;

	
}

	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/test.nim",line:0};
	framePtr = F;
		F.line = 72;
		specify("at bottom", colonanonymous__36239);
		F.line = 77;
		specify("after empty", colonanonymous__36252);
		F.line = 81;
		specify("in between", colonanonymous__36265);
	framePtr = F.prev;

	
}

function colonanonymous__36377() {

function colonanonymous__36322() {
	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action_spec.nim",line:0};
	framePtr = F;
		F.line = 12;
		var this_ = formula_33156();
		F.line = 14;
		weknowhow.expect(state_36007(), "to equal", state_36007());
	framePtr = F.prev;

	
}

function colonanonymous__36335() {
	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action_spec.nim",line:0};
	framePtr = F;
		F.line = 12;
		var this_ = formula_33156();
		F.line = 14;
		weknowhow.expect(state_36007(), "to equal", state_36007());
	framePtr = F.prev;

	
}

	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/test.nim",line:0};
	framePtr = F;
		F.line = 89;
		specify("at top", colonanonymous__36322);
		F.line = 93;
		specify("in between", colonanonymous__36335);
	framePtr = F.prev;

	
}

function colonanonymous__36434() {

function colonanonymous__36379() {
	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action_spec.nim",line:0};
	framePtr = F;
		F.line = 12;
		var this_ = formula_33156();
		F.line = 14;
		weknowhow.expect(state_36007(), "to equal", state_36007());
	framePtr = F.prev;

	
}

function colonanonymous__36392() {
	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action_spec.nim",line:0};
	framePtr = F;
		F.line = 12;
		var this_ = formula_33156();
		F.line = 14;
		weknowhow.expect(state_36007(), "to equal", state_36007());
	framePtr = F.prev;

	
}

	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/test.nim",line:0};
	framePtr = F;
		F.line = 98;
		specify("in between", colonanonymous__36379);
		F.line = 101;
		specify("at bottom", colonanonymous__36392);
	framePtr = F.prev;

	
}

	var F={procname:"action_spec.:anonymous",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/test.nim",line:0};
	framePtr = F;
		F.line = 18;
		describe("split", colonanonymous__36071);
		F.line = 32;
		describe("wedge", colonanonymous__36154);
		F.line = 53;
		describe("join left", colonanonymous__36237);
		F.line = 70;
		describe("join right", colonanonymous__36320);
		F.line = 87;
		describe("shift left", colonanonymous__36377);
		F.line = 96;
		describe("shift right", colonanonymous__36434);
	framePtr = F.prev;

	
}
describe("action", colonanonymous__36859);
