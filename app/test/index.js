/* Generated by the Nim Compiler v0.17.2 */
/*   (c) 2017 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI37093 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI37111 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI37086 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI37066 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI37233 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI37409 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI3446 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI37149 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI37134 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI3458 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3454 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI13609 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3506 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3501 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3424 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3438 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3442 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI37504 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI37487 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI37485 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI37058 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI33002 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI37005 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI37002 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI37054 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI33002 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI33002, name: "sk_none", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI33002, name: "sk_prefix", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI33002, name: "sk_infix", len: 0, sons: null}}};
NTI33002.node = NNI33002;
var NNI37005 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI33002, name: "kind", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI138, name: "text", sons: null}, 
{kind: 1, offset: "editable", len: 0, typ: NTI130, name: "editable", sons: null}]};
NTI37005.node = NNI37005;
NTI37002.base = NTI37005;
NTI37054.base = NTI37002;
NTI37058.base = NTI37002;
NTI37485.base = NTI37002;
NTI37487.base = NTI37002;
NTI37504.base = NTI37002;
var NNI3442 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3442.node = NNI3442;
var NNI3438 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3438.node = NNI3438;
NTI3501.base = NTI3424;
NTI3506.base = NTI3424;
var NNI3424 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3501, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI3506, name: "up", sons: null}]};
NTI3424.node = NNI3424;
var NNI3408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3408.node = NNI3408;
NTI3424.base = NTI3408;
NTI3438.base = NTI3424;
NTI3442.base = NTI3438;
var NNI13609 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI13609.node = NNI13609;
var NNI3454 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3454.node = NNI3454;
NTI3454.base = NTI3424;
var NNI3458 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3458.node = NNI3458;
NTI3458.base = NTI3424;
NTI37134.base = NTI37002;
NTI37149.base = NTI37002;
var NNI3446 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3446.node = NNI3446;
NTI3446.base = NTI3424;
NTI37409.base = NTI37002;
NTI37233.base = NTI37002;
NTI37066.base = NTI37002;
NTI37086.base = NTI37002;
NTI37111.base = NTI37002;
NTI37093.base = NTI37002;

function setConstr() {
		      var result = {};
      for (var i = 0; i < arguments.length; ++i) {
        var x = arguments[i];
        if (typeof(x) == "object") {
          for (var j = x[0]; j <= x[1]; ++j) {
            result[j] = true;
          }
        } else {
          result[x] = true;
        }
      }
      return result;
    

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_19817, src_19818, ti_19819) {
	var result_20229 = null;

		switch (ti_19819.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(isFatPointer_19801(ti_19819))) {
			result_20229 = src_19818;
			}
			else {
				result_20229 = [src_19818[0], src_19818[1]];
			}
			
			break;
		case 19:
			      if (dest_19817 === null || dest_19817 === undefined) {
        dest_19817 = {};
      }
      else {
        for (var key in dest_19817) { delete dest_19817[key]; }
      }
      for (var key in src_19818) { dest_19817[key] = src_19818[key]; }
      result_20229 = dest_19817;
    
			break;
		case 18:
		case 17:
			if (!((ti_19819.base == null))) {
			result_20229 = nimCopy(dest_19817, src_19818, ti_19819.base);
			}
			else {
			if ((ti_19819.kind == 17)) {
			result_20229 = (dest_19817 === null || dest_19817 === undefined) ? {m_type: ti_19819} : dest_19817;
			}
			else {
				result_20229 = (dest_19817 === null || dest_19817 === undefined) ? {} : dest_19817;
			}
			}
			nimCopyAux(result_20229, src_19818, ti_19819.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_19818 === null) {
        result_20229 = null;
      }
      else {
        if (dest_19817 === null || dest_19817 === undefined) {
          dest_19817 = new Array(src_19818.length);
        }
        else {
          dest_19817.length = src_19818.length;
        }
        result_20229 = dest_19817;
        for (var i = 0; i < src_19818.length; ++i) {
          result_20229[i] = nimCopy(result_20229[i], src_19818[i], ti_19819.base);
        }
      }
    
			break;
		case 28:
			      if (src_19818 !== null) {
        result_20229 = src_19818.slice(0);
      }
    
			break;
		default: 
			result_20229 = src_19818;
			break;
		}

	return result_20229;

}

function cstrToNimstr(c_14803) {
		  var ln = c_14803.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_14803.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_14803.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  result[r] = 0; // terminating zero
  return result;
  

	
}

function toJSStr(s_15003) {
		    var len = s_15003.length-1;
    var asciiPart = new Array(len);
    var fcc = String.fromCharCode;
    var nonAsciiPart = null;
    var nonAsciiOffset = 0;
    for (var i = 0; i < len; ++i) {
      if (nonAsciiPart !== null) {
        var offset = (i - nonAsciiOffset) * 2;
        var code = s_15003[i].toString(16);
        if (code.length == 1) {
          code = "0"+code;
        }
        nonAsciiPart[offset] = "%";
        nonAsciiPart[offset + 1] = code;
      }
      else if (s_15003[i] < 128)
        asciiPart[i] = fcc(s_15003[i]);
      else {
        asciiPart.length = i;
        nonAsciiOffset = i;
        nonAsciiPart = new Array((len - i) * 2);
        --i;
      }
    }
    asciiPart = asciiPart.join("");
    return (nonAsciiPart === null) ?
        asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function makeNimstrLit(c_14603) {
		    var ln = c_14603.length;
    var result = new Array(ln + 1);
    var i = 0;
    for (; i < ln; ++i) {
      result[i] = c_14603.charCodeAt(i);
    }
    result[i] = 0; // terminating zero
    return result;
    

	
}

function eqStrings(a_17203, b_17204) {
		    if (a_17203 == b_17204) return true;
    if ((!a_17203) || (!b_17204)) return false;
    var alen = a_17203.length;
    if (alen != b_17204.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_17203[i] != b_17204[i]) return false;
    return true;
  

	
}

function arrayConstr(len_20264, value_20265, typ_20266) {
		      var result = new Array(len_20264);
      for (var i = 0; i < len_20264; ++i) result[i] = nimCopy(null, value_20265, typ_20266);
      return result;
    

	
}

function raiseException(e_14006, ename_14007) {
		e_14006.name = ename_14007;
		if ((excHandler == 0)) {
		unhandledException(e_14006);
		}
		
		e_14006.trace = nimCopy(null, rawWriteStackTrace_13828(), NTI138);
		throw e_14006;

	
}

function subInt(a_17603, b_17604) {
		      var result = a_17603 - b_17604;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    

	
}

function chckIndx(i_20403, a_20404, b_20405) {
			var Tmp1;

	var result_20406 = 0;

	BeforeRet: do {
			if (!(a_20404 <= i_20403)) Tmp1 = false; else {				Tmp1 = (i_20403 <= b_20405);			}		if (Tmp1) {
		result_20406 = i_20403;
		break BeforeRet;
		}
		else {
		raiseIndexError();
		}
		
	} while (false);

	return result_20406;

}

function addInt(a_17403, b_17404) {
		      var result = a_17403 + b_17404;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    

	
}

function chckRange(i_20409, a_20410, b_20411) {
			var Tmp1;

	var result_20412 = 0;

	BeforeRet: do {
			if (!(a_20410 <= i_20409)) Tmp1 = false; else {				Tmp1 = (i_20409 <= b_20411);			}		if (Tmp1) {
		result_20412 = i_20409;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_20412;

}
var nimvm_6119 = false;
var nim_program_result = 0;
var globalRaiseHook_11605 = [null];
var localRaiseHook_11610 = [null];
var outOfMemHook_11613 = [null];
mocha.setup("bdd");

function ht_33030(tag_33032, parent_33033, next_33034) {
	var result_33035 = null;

	var F={procname:"model.ht",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 19;
		result_33035 = document.createElement(tag_33032);
		F.line = 20;
		parent_33033.insertBefore(result_33035, next_33034);
	framePtr = F.prev;

	return result_33035;

}

function symbol_33036() {
	var result_33038 = null;

	var F={procname:"model.symbol",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 23;
		result_33038 = {ht: ht_33030("code", ht_33030("p", document.body, null), null)};
	framePtr = F.prev;

	return result_33038;

}

function isFatPointer_19801(ti_19803) {
	var result_19804 = false;

	BeforeRet: do {
		result_19804 = !((ConstSet1[ti_19803.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_19804;

}

function nimCopyAux(dest_19822, src_19823, n_19825) {
		switch (n_19825.kind) {
		case 0:
			break;
		case 1:
			      dest_19822[n_19825.offset] = nimCopy(dest_19822[n_19825.offset], src_19823[n_19825.offset], n_19825.typ);
    
			break;
		case 2:
			L1: do {
				var i_20215 = 0;
				var colontmp__20217 = 0;
				colontmp__20217 = (n_19825.len - 1);
				var res_20220 = 0;
				L2: do {
						L3: while (true) {
						if (!(res_20220 <= colontmp__20217)) break L3;
							i_20215 = res_20220;
							nimCopyAux(dest_19822, src_19823, n_19825.sons[i_20215]);
							res_20220 += 1;
						}
				} while(false);
			} while(false);
			break;
		case 3:
			      dest_19822[n_19825.offset] = nimCopy(dest_19822[n_19825.offset], src_19823[n_19825.offset], n_19825.typ);
      for (var i = 0; i < n_19825.sons.length; ++i) {
        nimCopyAux(dest_19822, src_19823, n_19825.sons[i][1]);
      }
    
			break;
		}

	
}

function state_34013(val_34019) {
	var result_34020 = null;

	var F={procname:"spec_model.state",prev:framePtr,filename:"spec_model.nim",line:0};
	framePtr = F;
		F.line = 11;
		result_34020 = {kind: val_34019.Field0, text: nimCopy(null, val_34019.Field1, NTI138), editable: val_34019.Field2};
	framePtr = F.prev;

	return result_34020;

}

function kind_33040(self_33042) {
		var Tmp1;

	var result_33043 = 0;

	var F={procname:"model.kind",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 26;
		F.line = 26;
		switch (toJSStr(cstrToNimstr(self_33042.ht.className))) {
		case "prefix":
			Tmp1 = 1;
			break;
		case "infix":
			Tmp1 = 2;
			break;
		default: 
			Tmp1 = 0;
			break;
		}
		result_33043 = Tmp1;
	framePtr = F.prev;

	return result_33043;

}

function text_33048(self_33050) {
	var result_33051 = null;

	var F={procname:"model.text",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 45;
		result_33051 = nimCopy(null, cstrToNimstr(self_33050.ht.textContent), NTI138);
	framePtr = F.prev;

	return result_33051;

}

function editable_33056(self_33058) {
	var result_33059 = false;

	var F={procname:"model.editable",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 52;
		result_33059 = self_33058.ht.isContentEditable;
	framePtr = F.prev;

	return result_33059;

}

function capture_34037(self_34039) {
	var result_34040 = null;

	var F={procname:"spec_model.capture",prev:framePtr,filename:"spec_model.nim",line:0};
	framePtr = F;
		F.line = 23;
		result_34040 = state_34013({Field0: kind_33040(self_34039), Field1: text_33048(self_34039), Field2: editable_33056(self_34039)});
	framePtr = F.prev;

	return result_34040;

}

function none_34022(editable_34024) {
	var result_34025 = null;

	var F={procname:"spec_model.none",prev:framePtr,filename:"spec_model.nim",line:0};
	framePtr = F;
		F.line = 14;
		result_34025 = state_34013({Field0: 0, Field1: makeNimstrLit(""), Field2: editable_34024});
	framePtr = F.prev;

	return result_34025;

}

function kindeq__33044(self_33046, val_33047) {
		var Tmp1;

	var F={procname:"model.kind=",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 35;
		F.line = 36;
		switch (val_33047) {
		case 1:
			Tmp1 = makeNimstrLit("prefix");
			break;
		case 2:
			Tmp1 = makeNimstrLit("infix");
			break;
		case 0:
			Tmp1 = makeNimstrLit("");
			break;
		}
		self_33046.ht.className = toJSStr(Tmp1);
	framePtr = F.prev;

	
}

function texteq__33052(self_33054, val_33055) {
	var F={procname:"model.text=",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 48;
		self_33054.ht.textContent = toJSStr(val_33055);
	framePtr = F.prev;

	
}

function prefix_34027(text_34029) {
	var result_34030 = null;

	var F={procname:"spec_model.prefix",prev:framePtr,filename:"spec_model.nim",line:0};
	framePtr = F;
		F.line = 17;
		result_34030 = state_34013({Field0: 1, Field1: text_34029, Field2: false});
	framePtr = F.prev;

	return result_34030;

}

function infix_34032(text_34034) {
	var result_34035 = null;

	var F={procname:"spec_model.infix",prev:framePtr,filename:"spec_model.nim",line:0};
	framePtr = F;
		F.line = 20;
		result_34035 = state_34013({Field0: 2, Field1: text_34034, Field2: false});
	framePtr = F.prev;

	return result_34035;

}

function editableeq__33060(self_33062, val_33063) {
		var Tmp1;

	var F={procname:"model.editable=",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 55;
		if (val_33063) {
		Tmp1 = makeNimstrLit("true");
		}
		else {
		Tmp1 = makeNimstrLit("inherit");
		}
		
		self_33062.ht.contentEditable = toJSStr(Tmp1);
	framePtr = F.prev;

	
}

function del_33098(self_33100) {
	var F={procname:"model.del",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 74;
		self_33100.ht.parentNode.removeChild(self_33100.ht);
	framePtr = F.prev;

	
}

function colonanonymous__34330() {

		function colonanonymous__34340() {
			var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
			framePtr = F;
				F.line = 39;
				this._subject_ = symbol_33036();
			framePtr = F.prev;

			
		}

		function colonanonymous__34361() {
			var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_model.nim",line:0};
			framePtr = F;
				if (!((this._context_ == null))) {
				F.line = 36;
				this._context_();
				}
				
				F.line = 37;
				weknowhow.expect(capture_34037(this._subject_), "to equal", none_34022(false));
			framePtr = F.prev;

			
		}

		function colonanonymous__34400() {
			var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_model.nim",line:0};
			framePtr = F;
				F.line = 31;
				kindeq__33044(this._subject_, 0);
				if (!((this._context_ == null))) {
				F.line = 36;
				this._context_();
				}
				
				F.line = 37;
				weknowhow.expect(capture_34037(this._subject_), "to equal", none_34022(false));
			framePtr = F.prev;

			
		}

		function colonanonymous__34439() {
			var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_model.nim",line:0};
			framePtr = F;
				F.line = 35;
				kindeq__33044(this._subject_, 1);
				F.line = 36;
				texteq__33052(this._subject_, makeNimstrLit("foo"));
				if (!((this._context_ == null))) {
				F.line = 36;
				this._context_();
				}
				
				F.line = 37;
				weknowhow.expect(capture_34037(this._subject_), "to equal", prefix_34027(makeNimstrLit("foo")));
			framePtr = F.prev;

			
		}

		function colonanonymous__34478() {
			var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_model.nim",line:0};
			framePtr = F;
				F.line = 40;
				kindeq__33044(this._subject_, 2);
				F.line = 41;
				texteq__33052(this._subject_, makeNimstrLit("->"));
				if (!((this._context_ == null))) {
				F.line = 36;
				this._context_();
				}
				
				F.line = 37;
				weknowhow.expect(capture_34037(this._subject_), "to equal", infix_34032(makeNimstrLit("->")));
			framePtr = F.prev;

			
		}

		function colonanonymous__34517() {
			var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_model.nim",line:0};
			framePtr = F;
				F.line = 45;
				kindeq__33044(this._subject_, 0);
				F.line = 46;
				editableeq__33060(this._subject_, true);
				if (!((this._context_ == null))) {
				F.line = 36;
				this._context_();
				}
				
				F.line = 37;
				weknowhow.expect(capture_34037(this._subject_), "to equal", none_34022(true));
			framePtr = F.prev;

			
		}

		function colonanonymous__34556() {
			var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_model.nim",line:0};
			framePtr = F;
				F.line = 50;
				kindeq__33044(this._subject_, 0);
				F.line = 51;
				editableeq__33060(this._subject_, false);
				if (!((this._context_ == null))) {
				F.line = 36;
				this._context_();
				}
				
				F.line = 37;
				weknowhow.expect(capture_34037(this._subject_), "to equal", none_34022(false));
			framePtr = F.prev;

			
		}

		function colonanonymous__34595() {
			var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_model.nim",line:0};
			framePtr = F;
				F.line = 56;
				kindeq__33044(this._subject_, 1);
				F.line = 57;
				texteq__33052(this._subject_, makeNimstrLit("foo"));
				F.line = 58;
				del_33098(this._subject_);
				if (!((this._context_ == null))) {
				F.line = 36;
				this._context_();
				}
				
				F.line = 37;
				weknowhow.expect(capture_34037(this._subject_), "to equal", prefix_34027(makeNimstrLit("foo")));
			framePtr = F.prev;

			
		}

	var F={procname:"spec_model.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
	framePtr = F;
		F.line = 38;
		beforeEach(colonanonymous__34340);
		F.line = 27;
		specify("default", colonanonymous__34361);
		F.line = 30;
		specify("clear class", colonanonymous__34400);
		F.line = 34;
		specify("set prefix", colonanonymous__34439);
		F.line = 39;
		specify("set infix", colonanonymous__34478);
		F.line = 44;
		specify("enable edit", colonanonymous__34517);
		F.line = 49;
		specify("disable edit", colonanonymous__34556);
		F.line = 55;
		specify("remove", colonanonymous__34595);
	framePtr = F.prev;

	
}
describe("model", colonanonymous__34330);

function formula_33116() {
	var result_33118 = null;

	var F={procname:"model.formula",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 81;
		result_33118 = {curr: symbol_33036()};
		F.line = 82;
		editableeq__33060(result_33118.curr, true);
	framePtr = F.prev;

	return result_33118;

}

function state_37051(val_37060) {
	var result_37061 = null;

	var F={procname:"spec_action.state",prev:framePtr,filename:"spec_action.nim",line:0};
	framePtr = F;
		F.line = 26;
		result_37061 = {prev: nimCopy(null, val_37060.Field0, NTI37054), curr: val_37060.Field1, pos: val_37060.Field2, next: nimCopy(null, val_37060.Field3, NTI37058)};
	framePtr = F.prev;

	return result_37061;

}

function eqeq__33101(left_33103, right_33104) {
	var result_33105 = false;

	var F={procname:"model.==",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 78;
		result_33105 = (left_33103.ht == right_33104.ht);
	framePtr = F.prev;

	return result_33105;

}

function seqToPtr_37809(x_37814) {
		return x_37814

	
}

function add_11629(x_11632, x_11632_Idx, y_11633) {
		        var len = x_11632[0].length-1;
        for (var i = 0; i < y_11633.length; ++i) {
          x_11632[0][len] = y_11633.charCodeAt(i);
          ++len;
        }
        x_11632[0][len] = 0
      

	
}

function auxWriteStackTrace_13604(f_13606) {
					var Tmp3;

	var result_13607 = [null];

		var it_13615 = f_13606;
		var i_13616 = 0;
		var total_13617 = 0;
		var tempFrames_13621 = arrayConstr(64, {Field0: null, Field1: 0}, NTI13609);
		L1: do {
				L2: while (true) {
					if (!!((it_13615 == null))) Tmp3 = false; else {						Tmp3 = (i_13616 <= 63);					}				if (!Tmp3) break L2;
					tempFrames_13621[i_13616].Field0 = it_13615.procname;
					tempFrames_13621[i_13616].Field1 = it_13615.line;
					i_13616 += 1;
					total_13617 += 1;
					it_13615 = it_13615.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_13615 == null))) break L5;
					total_13617 += 1;
					it_13615 = it_13615.prev;
				}
		} while(false);
		result_13607[0] = nimCopy(null, makeNimstrLit(""), NTI138);
		if (!((total_13617 == i_13616))) {
		if (result_13607[0] != null) { result_13607[0] = (result_13607[0].slice(0, -1)).concat(makeNimstrLit("(")); } else { result_13607[0] = makeNimstrLit("(");};
		if (result_13607[0] != null) { result_13607[0] = (result_13607[0].slice(0, -1)).concat(cstrToNimstr(((total_13617 - i_13616))+"")); } else { result_13607[0] = cstrToNimstr(((total_13617 - i_13616))+"");};
		if (result_13607[0] != null) { result_13607[0] = (result_13607[0].slice(0, -1)).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_13607[0] = makeNimstrLit(" calls omitted) ...\x0A");};
		}
		
		L6: do {
			var j_13815 = 0;
			var colontmp__13821 = 0;
			colontmp__13821 = (i_13616 - 1);
			var res_13824 = colontmp__13821;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_13824)) break L8;
						j_13815 = res_13824;
						add_11629(result_13607, 0, tempFrames_13621[j_13815].Field0);
						if ((0 < tempFrames_13621[j_13815].Field1)) {
						if (result_13607[0] != null) { result_13607[0] = (result_13607[0].slice(0, -1)).concat(makeNimstrLit(", line: ")); } else { result_13607[0] = makeNimstrLit(", line: ");};
						if (result_13607[0] != null) { result_13607[0] = (result_13607[0].slice(0, -1)).concat(cstrToNimstr((tempFrames_13621[j_13815].Field1)+"")); } else { result_13607[0] = cstrToNimstr((tempFrames_13621[j_13815].Field1)+"");};
						}
						
						if (result_13607[0] != null) { result_13607[0] = (result_13607[0].slice(0, -1)).concat(makeNimstrLit("\x0A")); } else { result_13607[0] = makeNimstrLit("\x0A");};
						res_13824 -= 1;
					}
			} while(false);
		} while(false);

	return result_13607[0];

}

function rawWriteStackTrace_13828() {
	var result_13830 = null;

		if (!((framePtr == null))) {
		result_13830 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A").slice(0,-1)).concat(auxWriteStackTrace_13604(framePtr)), NTI138);
		}
		else {
			result_13830 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
		}
		

	return result_13830;

}

function unhandledException(e_13853) {
			var Tmp1;

		var buf_13854 = [makeNimstrLit("")];
			if (!!(eqStrings(e_13853.message, null))) Tmp1 = false; else {				Tmp1 = !((e_13853.message[0] == 0));			}		if (Tmp1) {
		if (buf_13854[0] != null) { buf_13854[0] = (buf_13854[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_13854[0] = makeNimstrLit("Error: unhandled exception: ");};
		if (buf_13854[0] != null) { buf_13854[0] = (buf_13854[0].slice(0, -1)).concat(e_13853.message); } else { buf_13854[0] = e_13853.message;};
		}
		else {
		if (buf_13854[0] != null) { buf_13854[0] = (buf_13854[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_13854[0] = makeNimstrLit("Error: unhandled exception");};
		}
		
		if (buf_13854[0] != null) { buf_13854[0] = (buf_13854[0].slice(0, -1)).concat(makeNimstrLit(" [")); } else { buf_13854[0] = makeNimstrLit(" [");};
		add_11629(buf_13854, 0, e_13853.name);
		if (buf_13854[0] != null) { buf_13854[0] = (buf_13854[0].slice(0, -1)).concat(makeNimstrLit("]\x0A")); } else { buf_13854[0] = makeNimstrLit("]\x0A");};
		if (buf_13854[0] != null) { buf_13854[0] = (buf_13854[0].slice(0, -1)).concat(rawWriteStackTrace_13828()); } else { buf_13854[0] = rawWriteStackTrace_13828();};
		var cbuf_14001 = toJSStr(buf_13854[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_14001);
  }
  else {
    throw cbuf_14001;
  }
  

	
}

function raiseOverflow() {
		var e_14440 = null;
		e_14440 = {m_type: NTI3442, parent: null, name: null, message: null, trace: null, up: null};
		e_14440.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		e_14440.parent = null;
		raiseException(e_14440, "OverflowError");

	
}

function raiseIndexError() {
		var e_14494 = null;
		e_14494 = {m_type: NTI3454, parent: null, name: null, message: null, trace: null, up: null};
		e_14494.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI138);
		e_14494.parent = null;
		raiseException(e_14494, "IndexError");

	
}

function eqeq__37507(x_37512, y_37515) {
	var result_37516 = false;

	var F={procname:"==.==",prev:framePtr,filename:"lib/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((seqToPtr_37809(x_37512) == seqToPtr_37809(y_37515))) {
		F.line = 2294;
		result_37516 = true;
		break BeforeRet;
		}
		
		if (((x_37512 === null) || (y_37515 === null))) {
		F.line = 2297;
		result_37516 = false;
		break BeforeRet;
		}
		
		if (!(((x_37512 != null ? x_37512.length : 0) == (y_37515 != null ? y_37515.length : 0)))) {
		F.line = 2300;
		result_37516 = false;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 2302;
			var i_38045 = 0;
			F.line = 1983;
			var colontmp__38057 = 0;
			F.line = 2302;
			colontmp__38057 = subInt((x_37512 != null ? x_37512.length : 0), 1);
			F.line = 1986;
			var res_38060 = 0;
			L2: do {
				F.line = 1987;
					L3: while (true) {
					if (!(res_38060 <= colontmp__38057)) break L3;
						F.line = 1988;
						i_38045 = res_38060;
						if (!((x_37512[chckIndx(i_38045, 0, x_37512.length-1)-0] == y_37515[chckIndx(i_38045, 0, y_37515.length-1)-0]))) {
						F.line = 2304;
						result_37516 = false;
						break BeforeRet;
						}
						
						F.line = 1989;
						res_38060 = addInt(res_38060, 1);
					}
			} while(false);
		} while(false);
		F.line = 2306;
		result_37516 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_37516;

}

function state_37031(val_37037) {
	var result_37038 = null;

	var F={procname:"spec_action.state",prev:framePtr,filename:"spec_action.nim",line:0};
	framePtr = F;
		F.line = 17;
		result_37038 = {kind: val_37037.Field0, text: nimCopy(null, val_37037.Field1, NTI138), editable: val_37037.Field2};
	framePtr = F.prev;

	return result_37038;

}

function raiseRangeError() {
		var e_14476 = null;
		e_14476 = {m_type: NTI3458, parent: null, name: null, message: null, trace: null, up: null};
		e_14476.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
		e_14476.parent = null;
		raiseException(e_14476, "RangeError");

	
}

function pos_33120(self_33122) {
		var Tmp1;

	var result_33123 = 0;

	var F={procname:"model.pos",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 85;
		F.line = 85;
		var sel_33124 = document.getSelection();
		if ((0 < sel_33124.rangeCount)) {
		Tmp1 = chckRange(sel_33124.getRangeAt(0).startOffset, -2147483648, 2147483647);
		}
		else {
		Tmp1 = -2147483648;
		}
		
		result_33123 = Tmp1;
	framePtr = F.prev;

	return result_33123;

}

function capture_37465(self_37467) {
	var result_37468 = null;

	var F={procname:"spec_action.capture",prev:framePtr,filename:"spec_action.nim",line:0};
	framePtr = F;
		F.line = 50;
		F.line = 50;
		var curr_37469 = self_37467.curr;
		F.line = 52;
		var prev_37486 = nimCopy(null, [], NTI37485);
		F.line = 53;
		var next_37488 = nimCopy(null, null, NTI37487);
		L1: do {
			F.line = 54;
			var sym_37489 = null;
			F.line = 127;
			var node_38093 = self_37467.curr.ht.parentNode.firstChild;
			L2: do {
				F.line = 128;
					L3: while (true) {
					if (!!((node_38093 == null))) break L3;
						F.line = 129;
						sym_37489 = {ht: node_38093};
						if (eqeq__33101(sym_37489, curr_37469)) {
						F.line = 56;
						next_37488 = nimCopy(null, [], NTI37504);
						}
						else {
						if (eqeq__37507(next_37488, null)) {
						F.line = 58;
						if (prev_37486 != null) { prev_37486.push(state_37031({Field0: kind_33040(sym_37489), Field1: text_33048(sym_37489), Field2: editable_33056(sym_37489)})); } else { prev_37486 = [state_37031({Field0: kind_33040(sym_37489), Field1: text_33048(sym_37489), Field2: editable_33056(sym_37489)})]; };
						}
						else {
							F.line = 60;
						if (next_37488 != null) { next_37488.push(state_37031({Field0: kind_33040(sym_37489), Field1: text_33048(sym_37489), Field2: editable_33056(sym_37489)})); } else { next_37488 = [state_37031({Field0: kind_33040(sym_37489), Field1: text_33048(sym_37489), Field2: editable_33056(sym_37489)})]; };
						}
						}
						F.line = 130;
						node_38093 = node_38093.nextSibling;
					}
			} while(false);
		} while(false);
		result_37468 = state_37051({Field0: prev_37486, Field1: state_37031({Field0: kind_33040(curr_37469), Field1: text_33048(curr_37469), Field2: editable_33056(curr_37469)}), Field2: pos_33120(self_37467), Field3: next_37488});
	framePtr = F.prev;

	return result_37468;

}

function state_37113(val_37118) {
	var result_37119 = null;

	var F={procname:"spec_action.state",prev:framePtr,filename:"spec_action.nim",line:0};
	framePtr = F;
		F.line = 35;
		result_37119 = {prev: nimCopy(null, [], NTI37134), curr: val_37118.Field0, pos: val_37118.Field1, next: nimCopy(null, [], NTI37149)};
	framePtr = F.prev;

	return result_37119;

}

function none_37040(editable_37042) {
	var result_37043 = null;

	var F={procname:"spec_action.none",prev:framePtr,filename:"spec_action.nim",line:0};
	framePtr = F;
		F.line = 20;
		result_37043 = state_37031({Field0: 0, Field1: makeNimstrLit(""), Field2: editable_37042});
	framePtr = F.prev;

	return result_37043;

}

function add_33171(self_33173, next_33174, kind_33175, text_33176) {
		var Tmp1;

	var F={procname:"model.add",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 107;
		if (!((next_33174 == null))) {
		Tmp1 = next_33174.ht;
		}
		else {
		Tmp1 = null;
		}
		
		var prev_33188 = {ht: ht_33030("code", self_33173.curr.ht.parentNode, Tmp1)};
		F.line = 114;
		kindeq__33044(prev_33188, kind_33175);
		F.line = 115;
		texteq__33052(prev_33188, text_33176);
	framePtr = F.prev;

	
}

function prepend_33191(self_33193, kind_33194, text_33195) {
	var F={procname:"model.prepend",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 119;
		add_33171(self_33193, self_33193.curr, kind_33194, text_33195);
	framePtr = F.prev;

	
}

function X5BX5D__21642(s_21644, x_21654) {
	var result_21655 = null;

	var F={procname:"system.[]",prev:framePtr,filename:"lib/system.nim",line:0};
	framePtr = F;
		F.line = 3404;
		result_21655 = nimCopy(null, (s_21644.slice(x_21654.a, (x_21654.b)+1).concat(0)), NTI138);
	framePtr = F.prev;

	return result_21655;

}

function dotdot__36008(a_36012, b_36014) {
	var result_36016 = {a: 0, b: 0};

	var F={procname:".....",prev:framePtr,filename:"lib/system.nim",line:0};
	framePtr = F;
		F.line = 305;
		result_36016.a = a_36012;
		F.line = 306;
		result_36016.b = b_36014;
	framePtr = F.prev;

	return result_36016;

}

function split_36002(self_36004) {
	var F={procname:"action.split",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action.nim",line:0};
	framePtr = F;
		F.line = 4;
		var text_36005 = text_33048(self_36004.curr);
		F.line = 5;
		var pos_36006 = pos_33120(self_36004);
		F.line = 6;
		prepend_33191(self_36004, kind_33040(self_36004.curr), X5BX5D__21642(text_36005, dotdot__36008(0, subInt(pos_36006, 1))));
		F.line = 7;
		texteq__33052(self_36004.curr, X5BX5D__21642(text_36005, dotdot__36008(pos_36006, subInt((text_36005 != null ? text_36005.length-1 : 0), 1))));
		if (((text_33048(self_36004.curr) != null ? text_33048(self_36004.curr).length-1 : 0) == 0)) {
		F.line = 9;
		kindeq__33044(self_36004.curr, 0);
		}
		
	framePtr = F.prev;

	
}

function sysFatal_22421(message_22427) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"lib/system.nim",line:0};
	framePtr = F;
		F.line = 2721;
		var e_22429 = null;
		F.line = 2722;
		e_22429 = {m_type: NTI3446, parent: null, name: null, message: null, trace: null, up: null};
		F.line = 2723;
		e_22429.message = nimCopy(null, message_22427, NTI138);
		F.line = 2724;
		raiseException(e_22429, "AssertionError");
	framePtr = F.prev;

	
}

function raiseAssert_22416(msg_22418) {
	var F={procname:"system.raiseAssert",prev:framePtr,filename:"lib/system.nim",line:0};
	framePtr = F;
		F.line = 3605;
		sysFatal_22421(msg_22418);
	framePtr = F.prev;

	
}

function failedAssertImpl_22439(msg_22441) {
	var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"lib/system.nim",line:0};
	framePtr = F;
		F.line = 3613;
		raiseAssert_22416(msg_22441);
	framePtr = F.prev;

	
}

function newSeq_37404(len_37408) {
	var result_37410 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"lib/system.nim",line:0};
	framePtr = F;
		F.line = 709;
		result_37410 = new Array(len_37408); for (var i=0;i<len_37408;++i) {result_37410[i]=null;}	framePtr = F.prev;

	return result_37410;

}

function reversed_37223(a_37228, first_37230, last_37232) {
	var result_37234 = null;

	var F={procname:"reversed.reversed",prev:framePtr,filename:"lib/pure/algorithm.nim",line:0};
	framePtr = F;
		if (!((subInt(first_37230, 1) <= last_37232))) {
		F.line = 53;
		failedAssertImpl_22439(makeNimstrLit("\x0A  first - 1 <= last "));
		}
		
		F.line = 54;
		var i_37401 = subInt(last_37232, first_37230);
		F.line = 55;
		var x_37402 = first_37230;
		F.line = 56;
		result_37234 = nimCopy(null, newSeq_37404(chckRange(addInt(i_37401, 1), 0, 2147483647)), NTI37409);
		L1: do {
			F.line = 57;
				L2: while (true) {
				if (!(0 <= i_37401)) break L2;
					F.line = 58;
					result_37234[chckIndx(i_37401, 0, result_37234.length-1)-0] = a_37228[chckIndx(x_37402, 0, a_37228.length-1)-0];
					F.line = 59;
					i_37401 = subInt(i_37401, 1);
					F.line = 60;
					x_37402 = addInt(x_37402, 1);
				}
		} while(false);
	framePtr = F.prev;

	return result_37234;

}

function reversed_37207(a_37212) {
	var result_37214 = null;

	var F={procname:"reversed.reversed",prev:framePtr,filename:"lib/pure/algorithm.nim",line:0};
	framePtr = F;
		F.line = 63;
		result_37214 = nimCopy(null, reversed_37223(a_37212, 0, (a_37212 != null ? (a_37212.length-1) : -1)), NTI37233);
	framePtr = F.prev;

	return result_37214;

}

function next_33081(self_33083) {
		var Tmp1;

	var result_33084 = null;

	var F={procname:"model.next",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 67;
		F.line = 67;
		var node_33085 = self_33083.ht.nextSibling;
		if (!((node_33085 == null))) {
		Tmp1 = {ht: node_33085};
		}
		else {
		Tmp1 = null;
		}
		
		result_33084 = Tmp1;
	framePtr = F.prev;

	return result_33084;

}

function append_33196(self_33198, kind_33199, text_33200) {
	var F={procname:"model.append",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 123;
		add_33171(self_33198, next_33081(self_33198.curr), kind_33199, text_33200);
	framePtr = F.prev;

	
}

function poseq__33144(self_33146, val_33147) {
	var F={procname:"model.pos=",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 92;
		var first_33148 = self_33146.curr.ht.firstChild;
		if (((first_33148 == null) && (val_33147 == 0))) {
		F.line = 95;
		break BeforeRet;
		}
		
		F.line = 97;
		var sel_33168 = document.getSelection();
		F.line = 98;
		var range_33169 = document.createRange();
		F.line = 99;
		range_33169.setStart(first_33148, val_33147);
		F.line = 100;
		sel_33168.removeAllRanges();
		F.line = 101;
		sel_33168.addRange(range_33169);
	} while (false);
	framePtr = F.prev;

	
}

function setup_37151(self_37153, state_37154) {
	var F={procname:"spec_action.setup",prev:framePtr,filename:"spec_action.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((state_37154 == null)) {
		F.line = 39;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 40;
			var sym_37202 = null;
			F.line = 3637;
			var colontmp__37451 = null;
			F.line = 40;
			colontmp__37451 = state_37154.prev;
			F.line = 3639;
			var i_37454 = 0;
			F.line = 3640;
			var L_37456 = (colontmp__37451 != null ? colontmp__37451.length : 0);
			L2: do {
				F.line = 3641;
					L3: while (true) {
					if (!(i_37454 < L_37456)) break L3;
						F.line = 3642;
						sym_37202 = colontmp__37451[chckIndx(i_37454, 0, colontmp__37451.length-1)-0];
						F.line = 41;
						prepend_33191(self_37153, sym_37202.kind, sym_37202.text);
						F.line = 3643;
						i_37454 = addInt(i_37454, 1);
						if (!(((colontmp__37451 != null ? colontmp__37451.length : 0) == L_37456))) {
						F.line = 3644;
						failedAssertImpl_22439(makeNimstrLit("len(a) == L seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 42;
		var curr_37203 = self_37153.curr;
		F.line = 43;
		kindeq__33044(curr_37203, state_37154.curr.kind);
		F.line = 44;
		texteq__33052(curr_37203, state_37154.curr.text);
		L4: do {
			F.line = 45;
			var sym_37449 = null;
			F.line = 3637;
			var colontmp__37458 = null;
			F.line = 45;
			colontmp__37458 = reversed_37207(state_37154.next);
			F.line = 3639;
			var i_37461 = 0;
			F.line = 3640;
			var L_37463 = (colontmp__37458 != null ? colontmp__37458.length : 0);
			L5: do {
				F.line = 3641;
					L6: while (true) {
					if (!(i_37461 < L_37463)) break L6;
						F.line = 3642;
						sym_37449 = colontmp__37458[chckIndx(i_37461, 0, colontmp__37458.length-1)-0];
						F.line = 46;
						append_33196(self_37153, sym_37449.kind, sym_37449.text);
						F.line = 3643;
						i_37461 = addInt(i_37461, 1);
						if (!(((colontmp__37458 != null ? colontmp__37458.length : 0) == L_37463))) {
						F.line = 3644;
						failedAssertImpl_22439(makeNimstrLit("len(a) == L seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 47;
		poseq__33144(self_37153, state_37154.pos);
	} while (false);
	framePtr = F.prev;

	
}

function prefix_37045(text_37047, editable_37048) {
	var result_37049 = null;

	var F={procname:"spec_action.prefix",prev:framePtr,filename:"spec_action.nim",line:0};
	framePtr = F;
		F.line = 23;
		result_37049 = state_37031({Field0: 1, Field1: text_37047, Field2: editable_37048});
	framePtr = F.prev;

	return result_37049;

}

function state_37063(val_37070) {
	var result_37071 = null;

	var F={procname:"spec_action.state",prev:framePtr,filename:"spec_action.nim",line:0};
	framePtr = F;
		F.line = 29;
		result_37071 = {prev: nimCopy(null, val_37070.Field0, NTI37066), curr: val_37070.Field1, pos: val_37070.Field2, next: nimCopy(null, [], NTI37086)};
	framePtr = F.prev;

	return result_37071;

}

function wedge_36026(self_36028) {
	var F={procname:"action.wedge",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action.nim",line:0};
	framePtr = F;
		F.line = 12;
		var kind_36029 = kind_33040(self_36028.curr);
		F.line = 13;
		var text_36030 = text_33048(self_36028.curr);
		F.line = 14;
		var pos_36031 = pos_33120(self_36028);
		if ((0 < pos_36031)) {
		F.line = 16;
		prepend_33191(self_36028, kind_36029, X5BX5D__21642(text_36030, dotdot__36008(0, subInt(pos_36031, 1))));
		}
		
		if ((pos_36031 < (text_36030 != null ? text_36030.length-1 : 0))) {
		F.line = 18;
		append_33196(self_36028, kind_36029, X5BX5D__21642(text_36030, dotdot__36008(pos_36031, subInt((text_36030 != null ? text_36030.length-1 : 0), 1))));
		}
		
		F.line = 19;
		kindeq__33044(self_36028.curr, 0);
		F.line = 20;
		texteq__33052(self_36028.curr, makeNimstrLit(""));
	framePtr = F.prev;

	
}

function prev_33064(self_33066) {
		var Tmp1;

	var result_33067 = null;

	var F={procname:"model.prev",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/model.nim",line:0};
	framePtr = F;
		F.line = 59;
		F.line = 59;
		var node_33068 = self_33066.ht.previousSibling;
		if (!((node_33068 == null))) {
		Tmp1 = {ht: node_33068};
		}
		else {
		Tmp1 = null;
		}
		
		result_33067 = Tmp1;
	framePtr = F.prev;

	return result_33067;

}

function join_36050(self_36052, old_36053, left_36054, right_36055) {
	var F={procname:"action.join",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action.nim",line:0};
	framePtr = F;
		F.line = 24;
		var left_text_36056 = text_33048(left_36054);
		F.line = 25;
		kindeq__33044(self_36052.curr, kind_33040(old_36053));
		F.line = 26;
		texteq__33052(self_36052.curr, (left_text_36056.slice(0,-1)).concat(text_33048(right_36055)));
		F.line = 27;
		poseq__33144(self_36052, (left_text_36056 != null ? left_text_36056.length-1 : 0));
		F.line = 28;
		del_33098(old_36053);
	framePtr = F.prev;

	
}

function join_left_36058(self_36060) {
	var F={procname:"action.join_left",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action.nim",line:0};
	framePtr = F;
		F.line = 31;
		var prev_36061 = prev_33064(self_36060.curr);
		if (!((prev_36061 == null))) {
		F.line = 33;
		join_36050(self_36060, prev_36061, prev_36061, self_36060.curr);
		}
		
	framePtr = F.prev;

	
}

function join_right_36073(self_36075) {
	var F={procname:"action.join_right",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action.nim",line:0};
	framePtr = F;
		F.line = 36;
		var next_36076 = next_33081(self_36075.curr);
		if (!((next_36076 == null))) {
		F.line = 38;
		join_36050(self_36075, next_36076, self_36075.curr, next_36076);
		}
		
	framePtr = F.prev;

	
}

function state_37088(val_37095) {
	var result_37096 = null;

	var F={procname:"spec_action.state",prev:framePtr,filename:"spec_action.nim",line:0};
	framePtr = F;
		F.line = 32;
		result_37096 = {prev: nimCopy(null, [], NTI37111), curr: val_37095.Field0, pos: val_37095.Field1, next: nimCopy(null, val_37095.Field2, NTI37093)};
	framePtr = F.prev;

	return result_37096;

}

function shift_36088(self_36090, curr_36091, pos_36092) {
	var F={procname:"action.shift",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action.nim",line:0};
	framePtr = F;
		F.line = 41;
		editableeq__33060(self_36090.curr, false);
		F.line = 42;
		self_36090.curr = curr_36091;
		F.line = 43;
		editableeq__33060(self_36090.curr, true);
		F.line = 44;
		poseq__33144(self_36090, pos_36092);
	framePtr = F.prev;

	
}

function shift_left_36093(self_36095) {
	var F={procname:"action.shift_left",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action.nim",line:0};
	framePtr = F;
		F.line = 47;
		var prev_36096 = prev_33064(self_36095.curr);
		if (!((prev_36096 == null))) {
		F.line = 49;
		shift_36088(self_36095, prev_36096, (text_33048(prev_36096) != null ? text_33048(prev_36096).length-1 : 0));
		}
		
	framePtr = F.prev;

	
}

function shift_right_36109(self_36111) {
	var F={procname:"action.shift_right",prev:framePtr,filename:"/Users/kennethmerthe/Projects/mine/metabolic-nim/lib/action.nim",line:0};
	framePtr = F;
		F.line = 52;
		var next_36112 = next_33081(self_36111.curr);
		if (!((next_36112 == null))) {
		F.line = 54;
		shift_36088(self_36111, next_36112, 0);
		}
		
	framePtr = F.prev;

	
}

function colonanonymous__40331() {

		function colonanonymous__40341() {
			var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
			framePtr = F;
				F.line = 39;
				this._subject_ = formula_33116();
			framePtr = F.prev;

			
		}

		function colonanonymous__40372() {
			var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_action.nim",line:0};
			framePtr = F;
				if (!((this._context_ == null))) {
				F.line = 36;
				this._context_();
				}
				
				F.line = 37;
				weknowhow.expect(capture_37465(this._subject_), "to equal", state_37113({Field0: none_37040(true), Field1: -2147483648}));
			framePtr = F.prev;

			
		}

		function colonanonymous__40546() {

				function colonanonymous__40551() {

						function colonanonymous__40553() {
							var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
							framePtr = F;
								F.line = 69;
								split_36002(this._subject_);
							framePtr = F.prev;

							
						}

					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
					framePtr = F;
						F.line = 45;
						this._context_ = colonanonymous__40553;
					framePtr = F.prev;

					
				}

				function colonanonymous__40588() {
					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_action.nim",line:0};
					framePtr = F;
						F.line = 33;
						setup_37151(this._subject_, state_37113({Field0: prefix_37045(makeNimstrLit("foo"), true), Field1: 3}));
						if (!((this._context_ == null))) {
						F.line = 36;
						this._context_();
						}
						
						F.line = 37;
						weknowhow.expect(capture_37465(this._subject_), "to equal", state_37063({Field0: [prefix_37045(makeNimstrLit("foo"), false)], Field1: none_37040(true), Field2: 0}));
					framePtr = F.prev;

					
				}

				function colonanonymous__40655() {
					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_action.nim",line:0};
					framePtr = F;
						F.line = 33;
						setup_37151(this._subject_, state_37113({Field0: prefix_37045(makeNimstrLit("foobuzz"), true), Field1: 3}));
						if (!((this._context_ == null))) {
						F.line = 36;
						this._context_();
						}
						
						F.line = 37;
						weknowhow.expect(capture_37465(this._subject_), "to equal", state_37063({Field0: [prefix_37045(makeNimstrLit("foo"), false)], Field1: prefix_37045(makeNimstrLit("buzz"), true), Field2: 0}));
					framePtr = F.prev;

					
				}

			var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
			framePtr = F;
				F.line = 44;
				beforeEach(colonanonymous__40551);
				F.line = 71;
				specify("after text", colonanonymous__40588);
				F.line = 75;
				specify("in between", colonanonymous__40655);
			framePtr = F.prev;

			
		}

		function colonanonymous__40970() {

				function colonanonymous__40975() {

						function colonanonymous__40977() {
							var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
							framePtr = F;
								F.line = 79;
								wedge_36026(this._subject_);
							framePtr = F.prev;

							
						}

					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
					framePtr = F;
						F.line = 45;
						this._context_ = colonanonymous__40977;
					framePtr = F.prev;

					
				}

				function colonanonymous__41036() {
					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_action.nim",line:0};
					framePtr = F;
						F.line = 33;
						setup_37151(this._subject_, state_37063({Field0: [prefix_37045(makeNimstrLit("foo"), false)], Field1: prefix_37045(makeNimstrLit("buzz"), true), Field2: 0}));
						if (!((this._context_ == null))) {
						F.line = 36;
						this._context_();
						}
						
						F.line = 37;
						weknowhow.expect(capture_37465(this._subject_), "to equal", state_37051({Field0: [prefix_37045(makeNimstrLit("foo"), false)], Field1: none_37040(true), Field2: 0, Field3: [prefix_37045(makeNimstrLit("buzz"), false)]}));
					framePtr = F.prev;

					
				}

				function colonanonymous__41127() {
					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_action.nim",line:0};
					framePtr = F;
						F.line = 33;
						setup_37151(this._subject_, state_37113({Field0: prefix_37045(makeNimstrLit("foo"), true), Field1: 3}));
						if (!((this._context_ == null))) {
						F.line = 36;
						this._context_();
						}
						
						F.line = 37;
						weknowhow.expect(capture_37465(this._subject_), "to equal", state_37063({Field0: [prefix_37045(makeNimstrLit("foo"), false)], Field1: none_37040(true), Field2: 0}));
					framePtr = F.prev;

					
				}

				function colonanonymous__41206() {
					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_action.nim",line:0};
					framePtr = F;
						F.line = 33;
						setup_37151(this._subject_, state_37113({Field0: prefix_37045(makeNimstrLit("foobuzz"), true), Field1: 3}));
						if (!((this._context_ == null))) {
						F.line = 36;
						this._context_();
						}
						
						F.line = 37;
						weknowhow.expect(capture_37465(this._subject_), "to equal", state_37051({Field0: [prefix_37045(makeNimstrLit("foo"), false)], Field1: none_37040(true), Field2: 0, Field3: [prefix_37045(makeNimstrLit("buzz"), false)]}));
					framePtr = F.prev;

					
				}

			var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
			framePtr = F;
				F.line = 44;
				beforeEach(colonanonymous__40975);
				F.line = 81;
				specify("before text", colonanonymous__41036);
				F.line = 85;
				specify("after text", colonanonymous__41127);
				F.line = 89;
				specify("in between", colonanonymous__41206);
			framePtr = F.prev;

			
		}

		function colonanonymous__41437() {

				function colonanonymous__41442() {

						function colonanonymous__41444() {
							var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
							framePtr = F;
								F.line = 93;
								join_left_36058(this._subject_);
							framePtr = F.prev;

							
						}

					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
					framePtr = F;
						F.line = 45;
						this._context_ = colonanonymous__41444;
					framePtr = F.prev;

					
				}

				function colonanonymous__41467() {
					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_action.nim",line:0};
					framePtr = F;
						F.line = 33;
						setup_37151(this._subject_, state_37113({Field0: prefix_37045(makeNimstrLit("foo"), true), Field1: 0}));
						if (!((this._context_ == null))) {
						F.line = 36;
						this._context_();
						}
						
						F.line = 37;
						weknowhow.expect(capture_37465(this._subject_), "to equal", state_37113({Field0: prefix_37045(makeNimstrLit("foo"), true), Field1: 0}));
					framePtr = F.prev;

					
				}

				function colonanonymous__41522() {
					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_action.nim",line:0};
					framePtr = F;
						F.line = 33;
						setup_37151(this._subject_, state_37063({Field0: [prefix_37045(makeNimstrLit("foo"), false)], Field1: none_37040(true), Field2: 0}));
						if (!((this._context_ == null))) {
						F.line = 36;
						this._context_();
						}
						
						F.line = 37;
						weknowhow.expect(capture_37465(this._subject_), "to equal", state_37113({Field0: prefix_37045(makeNimstrLit("foo"), true), Field1: 3}));
					framePtr = F.prev;

					
				}

				function colonanonymous__41589() {
					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_action.nim",line:0};
					framePtr = F;
						F.line = 33;
						setup_37151(this._subject_, state_37063({Field0: [prefix_37045(makeNimstrLit("foo"), false)], Field1: prefix_37045(makeNimstrLit("buzz"), true), Field2: 0}));
						if (!((this._context_ == null))) {
						F.line = 36;
						this._context_();
						}
						
						F.line = 37;
						weknowhow.expect(capture_37465(this._subject_), "to equal", state_37113({Field0: prefix_37045(makeNimstrLit("foobuzz"), true), Field1: 3}));
					framePtr = F.prev;

					
				}

			var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
			framePtr = F;
				F.line = 44;
				beforeEach(colonanonymous__41442);
				F.line = 95;
				specify("at top", colonanonymous__41467);
				F.line = 99;
				specify("before empty", colonanonymous__41522);
				F.line = 103;
				specify("in between", colonanonymous__41589);
			framePtr = F.prev;

			
		}

		function colonanonymous__41808() {

				function colonanonymous__41813() {

						function colonanonymous__41815() {
							var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
							framePtr = F;
								F.line = 107;
								join_right_36073(this._subject_);
							framePtr = F.prev;

							
						}

					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
					framePtr = F;
						F.line = 45;
						this._context_ = colonanonymous__41815;
					framePtr = F.prev;

					
				}

				function colonanonymous__41838() {
					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_action.nim",line:0};
					framePtr = F;
						F.line = 33;
						setup_37151(this._subject_, state_37113({Field0: prefix_37045(makeNimstrLit("foo"), true), Field1: 3}));
						if (!((this._context_ == null))) {
						F.line = 36;
						this._context_();
						}
						
						F.line = 37;
						weknowhow.expect(capture_37465(this._subject_), "to equal", state_37113({Field0: prefix_37045(makeNimstrLit("foo"), true), Field1: 3}));
					framePtr = F.prev;

					
				}

				function colonanonymous__41893() {
					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_action.nim",line:0};
					framePtr = F;
						F.line = 33;
						setup_37151(this._subject_, state_37088({Field0: none_37040(true), Field1: 0, Field2: [prefix_37045(makeNimstrLit("foo"), false)]}));
						if (!((this._context_ == null))) {
						F.line = 36;
						this._context_();
						}
						
						F.line = 37;
						weknowhow.expect(capture_37465(this._subject_), "to equal", state_37113({Field0: prefix_37045(makeNimstrLit("foo"), true), Field1: 0}));
					framePtr = F.prev;

					
				}

				function colonanonymous__41960() {
					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_action.nim",line:0};
					framePtr = F;
						F.line = 33;
						setup_37151(this._subject_, state_37088({Field0: prefix_37045(makeNimstrLit("foo"), true), Field1: 3, Field2: [prefix_37045(makeNimstrLit("buzz"), false)]}));
						if (!((this._context_ == null))) {
						F.line = 36;
						this._context_();
						}
						
						F.line = 37;
						weknowhow.expect(capture_37465(this._subject_), "to equal", state_37113({Field0: prefix_37045(makeNimstrLit("foobuzz"), true), Field1: 3}));
					framePtr = F.prev;

					
				}

			var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
			framePtr = F;
				F.line = 44;
				beforeEach(colonanonymous__41813);
				F.line = 109;
				specify("at bottom", colonanonymous__41838);
				F.line = 113;
				specify("after empty", colonanonymous__41893);
				F.line = 117;
				specify("in between", colonanonymous__41960);
			framePtr = F.prev;

			
		}

		function colonanonymous__42136() {

				function colonanonymous__42141() {

						function colonanonymous__42143() {
							var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
							framePtr = F;
								F.line = 123;
								shift_left_36093(this._subject_);
							framePtr = F.prev;

							
						}

					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
					framePtr = F;
						F.line = 45;
						this._context_ = colonanonymous__42143;
					framePtr = F.prev;

					
				}

				function colonanonymous__42166() {
					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_action.nim",line:0};
					framePtr = F;
						F.line = 33;
						setup_37151(this._subject_, state_37113({Field0: prefix_37045(makeNimstrLit("foo"), true), Field1: 0}));
						if (!((this._context_ == null))) {
						F.line = 36;
						this._context_();
						}
						
						F.line = 37;
						weknowhow.expect(capture_37465(this._subject_), "to equal", state_37113({Field0: prefix_37045(makeNimstrLit("foo"), true), Field1: 0}));
					framePtr = F.prev;

					
				}

				function colonanonymous__42233() {
					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_action.nim",line:0};
					framePtr = F;
						F.line = 33;
						setup_37151(this._subject_, state_37063({Field0: [prefix_37045(makeNimstrLit("foo"), false)], Field1: prefix_37045(makeNimstrLit("buzz"), true), Field2: 0}));
						if (!((this._context_ == null))) {
						F.line = 36;
						this._context_();
						}
						
						F.line = 37;
						weknowhow.expect(capture_37465(this._subject_), "to equal", state_37088({Field0: prefix_37045(makeNimstrLit("foo"), true), Field1: 3, Field2: [prefix_37045(makeNimstrLit("buzz"), false)]}));
					framePtr = F.prev;

					
				}

			var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
			framePtr = F;
				F.line = 44;
				beforeEach(colonanonymous__42141);
				F.line = 125;
				specify("at top", colonanonymous__42166);
				F.line = 130;
				specify("in between", colonanonymous__42233);
			framePtr = F.prev;

			
		}

		function colonanonymous__42421() {

				function colonanonymous__42426() {

						function colonanonymous__42428() {
							var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
							framePtr = F;
								F.line = 134;
								shift_right_36109(this._subject_);
							framePtr = F.prev;

							
						}

					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
					framePtr = F;
						F.line = 45;
						this._context_ = colonanonymous__42428;
					framePtr = F.prev;

					
				}

				function colonanonymous__42475() {
					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_action.nim",line:0};
					framePtr = F;
						F.line = 33;
						setup_37151(this._subject_, state_37088({Field0: prefix_37045(makeNimstrLit("foo"), true), Field1: 3, Field2: [prefix_37045(makeNimstrLit("buzz"), false)]}));
						if (!((this._context_ == null))) {
						F.line = 36;
						this._context_();
						}
						
						F.line = 37;
						weknowhow.expect(capture_37465(this._subject_), "to equal", state_37063({Field0: [prefix_37045(makeNimstrLit("foo"), false)], Field1: prefix_37045(makeNimstrLit("buzz"), true), Field2: 0}));
					framePtr = F.prev;

					
				}

				function colonanonymous__42542() {
					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec_action.nim",line:0};
					framePtr = F;
						F.line = 33;
						setup_37151(this._subject_, state_37113({Field0: prefix_37045(makeNimstrLit("foo"), true), Field1: 3}));
						if (!((this._context_ == null))) {
						F.line = 36;
						this._context_();
						}
						
						F.line = 37;
						weknowhow.expect(capture_37465(this._subject_), "to equal", state_37113({Field0: prefix_37045(makeNimstrLit("foo"), true), Field1: 3}));
					framePtr = F.prev;

					
				}

			var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
			framePtr = F;
				F.line = 44;
				beforeEach(colonanonymous__42426);
				F.line = 137;
				specify("in between", colonanonymous__42475);
				F.line = 141;
				specify("at bottom", colonanonymous__42542);
			framePtr = F.prev;

			
		}

	var F={procname:"spec_action.:anonymous",prev:framePtr,filename:"spec.nim",line:0};
	framePtr = F;
		F.line = 38;
		beforeEach(colonanonymous__40341);
		F.line = 66;
		specify("default", colonanonymous__40372);
		F.line = 69;
		describe("split", colonanonymous__40546);
		F.line = 79;
		describe("wedge", colonanonymous__40970);
		F.line = 93;
		describe("join (left)", colonanonymous__41437);
		F.line = 107;
		describe("join (right)", colonanonymous__41808);
		F.line = 123;
		describe("shift (left)", colonanonymous__42136);
		F.line = 134;
		describe("shift (right)", colonanonymous__42421);
	framePtr = F.prev;

	
}
describe("action", colonanonymous__40331);
mocha.run();
